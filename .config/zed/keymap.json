[
  // Standard macOS bindings
  {
    "bindings": {}
  },
  {
    "context": "Editor",
    "bindings": {
      "cmd-shift-s": "editor::Format",
      "alt-enter": "editor::ToggleCodeActions",
      "cmd-.": "pane::RevealInProjectPanel",

      "cmd-o": "project_symbols::Toggle",

      "cmd-k w": "pane::CloseInactiveItems",
      "cmd-k W": "workspace::CloseAllItemsAndPanes",

      "cmd-shift-w": "editor::SelectLargerSyntaxNode",
      "cmd-shift-a": "editor::SelectSmallerSyntaxNode",

      "cmd-shift-d": "editor::UndoSelection",
      "cmd-g": ["editor::SelectNext", { "replace_newest": true }],
      "cmd-shift-g": ["editor::SelectPrevious", { "replace_newest": true }]
    }
  },
  {
    "context": "Editor && mode == full",
    "bindings": {}
  },
  {
    "context": "Editor && mode == full && inline_completion",
    "bindings": {}
  },
  {
    "context": "Editor && !inline_completion",
    "bindings": {}
  },
  {
    "context": "Editor && mode == auto_height",
    "bindings": {}
  },
  {
    "context": "AssistantChat > Editor",
    "bindings": {}
  },
  {
    "context": "AssistantPanel",
    "bindings": {}
  },
  {
    "context": "ConversationEditor > Editor",
    "bindings": {}
  },
  {
    "context": "BufferSearchBar",
    "bindings": {}
  },
  {
    "context": "BufferSearchBar && in_replace",
    "bindings": {}
  },
  {
    "context": "BufferSearchBar && !in_replace > Editor",
    "bindings": {}
  },
  {
    "context": "ProjectSearchBar",
    "bindings": {}
  },
  {
    "context": "ProjectSearchBar > Editor",
    "bindings": {}
  },
  {
    "context": "ProjectSearchBar && in_replace",
    "bindings": {}
  },
  {
    "context": "ProjectSearchView",
    "bindings": {}
  },
  {
    "context": "Pane",
    "bindings": {}
  },
  // Bindings from VS Code
  {
    "context": "Editor",
    "bindings": {}
  },
  {
    "context": "Editor && mode == full",
    "bindings": {}
  },
  {
    "context": "Pane",
    "bindings": {}
  },
  {
    "context": "Workspace",
    "bindings": {}
  },
  // Bindings from Atom
  {
    "context": "Pane",
    "bindings": {}
  },
  // Bindings that should be unified with bindings for more general actions
  {
    "context": "Editor && renaming",
    "bindings": {}
  },
  {
    "context": "Editor && showing_completions",
    "bindings": {}
  },
  {
    "context": "Editor && showing_code_actions",
    "bindings": {}
  },
  {
    "context": "Editor && (showing_code_actions || showing_completions)",
    "bindings": {}
  },
  // Custom bindings
  {
    "bindings": {}
  },
  {
    "context": "Editor && mode == full",
    "bindings": {}
  },
  {
    "context": "ProjectSearchBar && !in_replace",
    "bindings": {}
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "q": "workspace::ToggleRightDock",
      "cmd-shift-l": "project_panel::CollapseAllEntries"
    }
  },
  {
    "context": "OutlinePanel",
    "bindings": {
      "escape": "outline_panel::ToggleFocus",
      "q": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "CollabPanel && not_editing",
    "bindings": {}
  },
  {
    "context": "(CollabPanel && editing) > Editor",
    "bindings": {}
  },
  {
    "context": "ChannelModal",
    "bindings": {}
  },
  {
    "context": "ChannelModal > Picker > Editor",
    "bindings": {}
  },
  {
    "context": "FileFinder",
    "bindings": {}
  },
  {
    "context": "TabSwitcher",
    "bindings": {}
  },
  {
    "context": "Terminal",
    "bindings": {}
  },
  {
    "context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
    "bindings": {
      // put key-bindings here if you want them to work in normal & visual mode
      "ctrl-shift-u": "vim::ScrollUp",
      "ctrl-shift-d": "vim::ScrollDown",
      "ctrl-u": ["workspace::SendKeystrokes", "ctrl-shift-u z z 3 k"],
      "ctrl-d": ["workspace::SendKeystrokes", "ctrl-shift-d z z 3 k"],

      "0": "vim::FirstNonWhitespace",
      "^": "vim::StartOfLine",
      "Y": ["workspace::SendKeystrokes", "y $"],
      "space w": ["workspace::SendKeystrokes", "0 v $ % $"],
      "space W": ["workspace::SendKeystrokes", "v $ % $"],

      "space d": "diagnostics::Deploy",
      "cmd-k p": "diagnostics::Deploy",

      "space e": "project_panel::ToggleFocus",
      "cmd-k e": "project_panel::ToggleFocus",

      "alt-k": "editor::GoToPrevDiagnostic",
      "alt-j": "editor::GoToDiagnostic",

      "cmd-[": "pane::GoBack",
      "cmd-]": "pane::GoForward",

      "alt-shift-k": "editor::GoToPrevHunk",
      "alt-shift-j": "editor::GoToHunk",

      "space o": "outline_panel::ToggleFocus",
      "cmd-k o": "outline_panel::ToggleFocus",

      "space z": "workspace::ToggleCenteredLayout",
      "cmd-k z": "workspace::ToggleCenteredLayout",

      "space q": "workspace::CloseAllDocks",
      "cmd-k q": "workspace::CloseAllDocks"
    }
  },
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      // put key-bindings here if you want them to work only in normal mode
      // "down": ["workspace::SendKeystrokes", "4 j"]
      // "up": ["workspace::SendKeystrokes", "4 k"]
    }
  },
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !menu",
    "bindings": {
      // visual, visual line & visual block modes
      "shift-alt-l": "editor::SortLinesCaseInsensitive"
    }
  },
  {
    "context": "Editor && vim_mode == insert && !menu",
    "bindings": {
      // put key-bindings here if you want them to work in insert mode
      "j k": "vim::NormalBefore",
      "j j": "vim::InsertEndOfLine"
    }
  }
]
